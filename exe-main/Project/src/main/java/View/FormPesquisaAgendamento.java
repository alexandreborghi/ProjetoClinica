/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.PacienteDAO;
import Controller.agendamentoDAO;
import Model.agendamento;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FormPesquisaAgendamento extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormPesquisaAgendamento
     */
    public FormPesquisaAgendamento() {
        initComponents();
        configurarForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabDados = new javax.swing.JTable();

        lblNome.setText("Pesquisa por nome");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeKeyReleased(evt);
            }
        });

        tabDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabDadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabDados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNome))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyReleased
        //if (evt.getKeyCode() == KeyEvent.VK_ENTER){ //PARA quando apenas o enter pesquisar

            //recuperar o nome utilizado na pesquisa
            String nome = txtNome.getText();

            if(nome.isEmpty()){
                //exibir todos os registros da tabela
                preencherTabela(new agendamentoDAO().listaragendamento());
            }else{
                //pesquisar pelo nome
                preencherTabela(
                    new agendamentoDAO().pesquisarPorNomeagendamento(nome)
                );
            }
            //}end do keyEvent
    }//GEN-LAST:event_txtNomeKeyReleased

    private void tabDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabDadosMouseClicked

        if (evt.getClickCount() == 2){

            //recuperar o id do agendamento selecionada
            int linha = tabDados.getSelectedRow();
            String id = tabDados.getValueAt(linha, 0).toString();

            //abrir o formulário de cadastro e centralizar na tela

            FormCadastroAgendamento o = new FormCadastroAgendamento(id);
            Dimension d = this.getDesktopPane().getSize();
            this.getDesktopPane().add(o);
            o.setLocation( (d.width-o.getSize().width)/2, (d.height-o.getSize().height)/2);
            o.setVisible(true);

            //fechar o formulário de pesquisa
            this.dispose();
        }
    }//GEN-LAST:event_tabDadosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNome;
    private javax.swing.JTable tabDados;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables

private void configurarForm(){
        this.setTitle("Pesquisa de agendamento");
        this.setResizable(false);
        this.setClosable(true);
        configurarTabela();
        preencherTabela(new agendamentoDAO().listaragendamento());
    }
    
    private void configurarTabela(){
        DefaultTableModel m = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        m.addColumn("Id");
        m.addColumn("id_paciente");
        m.addColumn("Nome");
        m.addColumn("Data");
        m.addColumn("Cpf");
        m.addColumn("Horario");
        m.addColumn("Status");
        tabDados.setModel(m);
    }  
    
    private void preencherTabela(List<agendamento> lista) {


        if (lista != null) {
            if (lista.size() > 0) {
                configurarTabela();
                DefaultTableModel m = (DefaultTableModel)tabDados.getModel();
                for(agendamento obj : lista){
                    m.addRow(new Object[]
                        {
                            obj.getId(),
                            
                            new PacienteDAO().pesquisarPorIdPaciente(
                                    Integer.toString(obj.getId_paciente())
                            ),
                            obj.getNome(),
                            obj.getData(),
                            obj.getCpf(),
                            obj.getHorario(),
                            obj.getStatus() == 0 ? "Marcado" : obj.getStatus() == 1 ? "Adiantado" : "Remarcado"
                            
                        }
                    );
                }
                tabDados.setModel(m);
            } else {
                configurarTabela();//ele volta os dados quando digita de novo no textfield
                JOptionPane.showMessageDialog(null, "A tabela não contém dados.", "",
                        JOptionPane.INFORMATION_MESSAGE
                );
            }
        } else {
            JOptionPane.showMessageDialog(null,"Ocorreu um erro.","",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }
    
}
